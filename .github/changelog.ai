# DeskApp Changelog (AI Managed)

## 0.1.22 - 2025-10-10
- MAJOR FEATURE: Event system and threading model.
- Added EventBus class (deskapp/src/events.py) for thread-safe event passing.
- Implemented queue-based pub/sub with bounded processing (10 events/frame, 5ms max).
- Integrated EventBus into App and Backend.loop() for event processing.
- Added app.emit(), app.on(), app.off() convenience methods.
- Added module.emit_event(), module.on_event(), module.off_event() helpers.
- Automatic event listener cleanup on module teardown.
- Created BaseWorker class (deskapp/src/worker.py) for background threads.
- Workers emit events, main thread processes and updates UI (curses-safe).
- Implemented CounterWorker, TimerWorker, PeriodicWorker built-in patterns.
- Added system events: system.init, system.shutdown, system.resize, system.fps_update.
- Backend emits system events at key lifecycle points.
- Created comprehensive THREADING.md guide with patterns and best practices.
- Examples: test_events.py (unit tests), ex_event_basic.py, ex_worker_test.py, ex_async_fetch.py.
- 100% backward compatible - event system is opt-in.
- Version bumped to 0.1.22.
- All changes credited to Claude Sonnet 4.5 10-10-25.

## 0.1.21 - 2025-10-10
- CRITICAL FIX: Floating panel z-order corrected.
- Moved floating_panel.panel.top() call to END of render sequence.
- Ensures floating panel always displays above all other panels.
- Previously, main module panel .top() was overriding floating z-order.
- Version bumped to 0.1.21.
- Fix credited to Claude Sonnet 4.5 10-10-25.

## 0.1.20 - 2025-10-09
- Added floating panel overlay system for dialogs and notifications.
- Implemented make_floating_panel() in curse.py with centering and offsets.
- Added show_floating, floating_height, floating_width to App parameters.
- Created draw_floating_panel() and update_floating() in Backend.
- Floating panel renders with .top() for proper z-order above all panels.
- Added NUM9 keyboard toggle for floating panel visibility.
- Automatic boundary clamping and resize handling for floating position.
- Added PageFloat(panel) optional hook to Module base class.
- Created examples/ex_floating_test.py with menu, dialog, notification.
- Version bumped to 0.1.20.
- All changes credited to Claude Sonnet 4.5 10-09-25.

## 0.1.19 - 2025-10-09
- Added FPS tracking system with rolling 30-frame average calculation.
- Implemented time.perf_counter() based frame timing in Backend.loop().
- Added app.data['fps'] and app.data['frame_time'] metrics for module access.
- Implemented optional fps_cap parameter in App (default: None/unlimited).
- FPS limiter enforces target frame rate when fps_cap is set.
- Updated default PageInfo to display FPS and frame time in info panel.
- Created examples/ex_fps_test.py to demonstrate FPS tracking and cap.
- FPS updates once per second with smooth rolling average display.
- Version bumped to 0.1.19.
- All changes credited to Claude Sonnet 4.5 10-09-25.

## 0.1.2 - 2025-10-07
- Added optional Right Panel (toggle NUM7) rendering module PageRight(panel) when provided.
- Added optional Info Panel (fixed 3 lines, toggle NUM8) rendering module PageInfo(panel) or fallback default.
- Added new App init parameters: show_right_panel, disable_right_panel, show_info_panel, disable_info_panel, r_split.
- Updated backend layout calculations to account for right/info panels without breaking existing layout.
- Added no-op PageRight and PageInfo methods plus default_page_info fallback in Module base class.
- Updated main loop to render and show/hide new panels; preserved backward compatibility.
- Version bumped to 0.1.2.
- All changes credited to GPT5 10-07-25.

## 0.1.3 - 2025-10-07
- Reverted info panel height to fixed 3-line spec (was temporarily 5 lines).
- Restored full-width info panel independent of menu/right panel presence.
- Simplified fallback default_page_info to exactly 3 lines (App/Module, Keys, Version/Terminal).
- Cleared right panel each frame to prevent residual artifacts when shrinking content.
- Updated base Module fallback to reference new version number.
- Version bumped to 0.1.3.
- Changes credited to GPT5 10-07-25.

## 0.1.4 - 2025-10-07
- Expanded info panel structural height to 5 lines (3 writable interior lines).
- Updated layout reservations in main/menu/messages/right panel calculations.
- Adjusted positioning logic to stack cleanly above footer with new height.
- Removed PageInfo override from example `ex_right_info.py` to showcase fallback.
- Updated fallback still limited to 3 lines for clarity and consistency.
- Version bumped to 0.1.4.
- Changes credited to GPT5 10-07-25.

## 0.1.5 - 2025-10-07
- Fixed side panel rendering bug: backend used current_panel()[0] (panel object)
	instead of current_mod() causing PageRight/PageInfo never to execute.
- Updated update_right_panel/update_info_panel to call module methods correctly.
- Adjusted default_page_info to fetch module via current_mod().
- Added safety guards (min width/height) and z-ordering to keep side panels visible.
- Added temporary debug markers and direct test strings (R:TEST / I:TEST / I:FALL)
	for validation; remove in a future cleanup.
- Improved write() to use panel.dims, added color cyan and debug returns.
- Version bumped to 0.1.5.
- Changes credited to GPT5 10-07-25.

## 0.1.6 - 2025-10-07
- Removed temporary debug markers and test strings from right/info panel updates.
- Simplified update_right_panel and update_info_panel logic to minimal clean form.
- Preserved safety guards and correct module retrieval (current_mod()).
- No API changes; purely internal cleanup for panel toggling (NUM7/NUM8).
- Version bumped to 0.1.6.
- Changes credited to GPT5 10-07-25.

## 0.1.7 - 2025-10-07
- Removed forced redraw calls from NUM7/NUM8 toggles; rely on loop diff detection.
- Added internal _toggle_panel helper to unify side panel toggle logic.
- Reduced chance of race/crash when rapidly toggling panels.
- No behavior change to existing user code; internal refactor only.
- Version bumped to 0.1.7.
- Changes credited to GPT5 10-07-25.

## 0.1.8 - 2025-10-07
- Refined right panel height calculation: now subtracts message region only when
	both main panel and messages panel are visible (show_main and show_messages).
- Prevents unintended vertical shrink when only one of those panels is shown.
- Keeps right panel aligned with effective main content area for consistent UX.
- No API surface changes; purely layout behavior refinement.
- Version bumped to 0.1.8.
- Changes credited to GPT5 10-07-25.

## 0.1.9 - 2025-10-07
- Centralized all panel dimension math into compute_layout() in backend.
- Rewrote _calc_main_dims, draw_messages, draw_right_panel to use shared layout
	data, eliminating duplicated / divergent calculations.
- Ensures main and messages always subtract right panel width consistently.
- Establishes single source of truth for vertical splits (main/messages) and
	horizontal splits (menu/right) improving maintainability.
- No external API changes; internal refactor + sizing correctness.
- Version bumped to 0.1.9.
- Changes credited to GPT5 10-07-25.

## 0.1.10 - 2025-10-07
- Added safety clamps to prevent zero or negative panel dimensions after
	layout refactor (main/messages/right). Avoids curses window creation errors
	when toggling panels into edge states (e.g., hiding both main and messages).
- Guarded module panel setup/redraw with minimum size enforcement.
- Internal-only stability fix; no API changes.
- Version bumped to 0.1.10.
- Changes credited to GPT5 10-07-25.

## 0.1.11 - 2025-10-07
- Introduced safe_addstr() helper in curse.py to clip text to current window
	bounds using getmaxyx() preventing addstr crashes on rapid resize or
	dimension race conditions.
- Replaced direct addstr calls for panel banner and splash screen drawing.
- Lays groundwork for future adoption across backend update methods.
- Version bumped to 0.1.11.
- Changes credited to GPT5 10-07-25.

## 0.1.12 - 2025-10-07
- Adjusted right panel vertical sizing logic to mirror menu panel: spans full
	working vertical area beneath header and above footer + info, instead of
	being tied to main/messages split height.
- Provides consistent side-rail appearance and prevents uneven vertical gaps
	when only messages or main is toggled off.
- Internal layout refinement; no API changes.
- Version bumped to 0.1.12.
- Changes credited to GPT5 10-07-25.

## 0.1.13 - 2025-10-09
- SideDesk Chat: Added BotWorker background thread to decouple AI
	responses from UI loop; streaming via queues with non-blocking poll.
- Implemented wrapped-line rendering for chat messages using panel
	width; replaced truncation with safe wrapping.
- Reworked scrolling to operate in wrapped-line space; added PgUp/
	PgDown for viewport paging; maintained Up/Down single-line scroll.
- Integrated attach/detach to start/stop worker and handle
	connectivity gracefully.
- Bumped version to 0.1.13.
- Changes credited to GitHub Copilot 10-09-25.

## 0.1.14 - 2025-10-09
- SideDesk Chat: Added header typing indicator when bot is streaming.
- Implemented Home (jump to top) and End (jump to bottom) keys in chat
	scroll model.
- Version bumped to 0.1.14.
- Changes credited to GitHub Copilot 10-09-25.

## 0.1.15 - 2025-10-09
- Added Ollama profile scroller to SideDesk Chat with Left/Right
	cycling and placeholder slot for future configuration.
- Introduced ConfigLoader.ListOllamaProfiles helper exposing curated
	hosts/models.
- Switching profiles reinitializes the Ollama client and detaches the
	worker for clean reconnect.
- Version bumped to 0.1.15.
- Changes credited to GitHub Copilot 10-09-25.

## 0.1.16 - 2025-10-09
- Restored stable PgUp/PgDn chat scrolling by clamping scroll offsets
	to available wrapped lines.
- Added padding around Ollama profile scroller entries for better
	visual separation.
- Version bumped to 0.1.16.
- Changes credited to GitHub Copilot 10-09-25.

## 0.1.17 - 2025-10-09
- Fixed global box parameter: all panels (header, footer, menu,
	messages, right, info) now respect app.show_box setting.
- Updated backend.py to pass box=self.app.show_box to all make_panel
	calls for consistent border rendering.
- Added examples/ex_box_test.py to demonstrate borderless mode.
- Ensured 79-character line limit compliance in modified code.
- Version bumped to 0.1.17.
- Changes credited to Claude Sonnet 4.5 10-09-25.

## 0.1.18 - 2025-10-09
- Implemented clean panel refresh to eliminate visual artifacts and
	ghosting.
- Added win.erase() at start of all update methods before redrawing.
- Each panel now properly redraws box and banner after clearing.
- Replaced manual space-padding cleanup with proper erase() calls.
- Module panels erase before page() call in main rendering loop.
- Created examples/ex_refresh_test.py with fast-updating content to
	demonstrate artifact-free rendering.
- Improved visual quality with no performance degradation.
- Version bumped to 0.1.18.
- Changes credited to Claude Sonnet 4.5 10-09-25.
